// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid()) // Using cuid for UUID-like strings, or @default(uuid()) if your DB supports it natively
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  passwordHash  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  roles       UserRole[]
  permissions UserPermission[] // For direct user-specific permissions
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique // e.g., "doctor", "nurse", "admin"
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  users       UserRole[]
  permissions RolePermission[]
}

model Permission {
  id          Int      @id @default(autoincrement())
  name        String   @unique // e.g., "read_patient_record", "edit_patient_record"
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  roleAssignments RolePermission[] // This permission is part of these RolePermission entries
  userAssignments UserPermission[] // This permission is part of these UserPermission entries
}

model UserRole {
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String // Foreign Key referencing users.id
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId Int    // Foreign Key referencing roles.id

  @@id([userId, roleId])
  @@index([userId])
  @@index([roleId])
}

model RolePermission {
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId       Int        // Foreign Key referencing roles.id
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId Int        // Foreign Key referencing permissions.id

  @@id([roleId, permissionId])
  @@index([roleId])
  @@index([permissionId])
}

model UserPermission {
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String     // Foreign Key referencing users.id
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId Int        // Foreign Key referencing permissions.id

  @@id([userId, permissionId])
  @@index([userId])
  @@index([permissionId])
}
